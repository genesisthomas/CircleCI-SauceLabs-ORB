version: 2.1
description: >
  Encapsulates interactions with Sauce Connect Proxy

display:
  source_url: https://github.com/saucelabs-sample-test-frameworks/CircleCI-SauceLabs-ORB
  home_url: https://saucelabs.com/

commands:
  install:
    parameters:
      version:
        description: You can specify which version of Sauce Connect Proxy to use.
        type: string
        default: "4.5.1"
    steps:
      - run:
          name: Install Sauce Connect Proxy
          command: |
            cd /tmp
            curl https://saucelabs.com/downloads/sc-<<parameters.version>>-linux.tar.gz -o saucelabs.tar.gz
            tar -xzf saucelabs.tar.gz
            chmod a+x sc-<<parameters.version>>-linux/bin/sc
            sudo cp sc-<<parameters.version>>-linux/bin/sc /usr/local/bin
            sc --version

  open_tunnel:
    parameters:
      tunnel_identifier:
        description: This desired capability will let the test job use any shared tunnels available from the specified parent account. i.e. any account that is upstream in the hierarchy. If using a shared tunnel, you must specify both tunnelIdentifier and parentTunnel.
        type: string
        default: ""
    steps:
      - run:
          name: Open Sauce Connect Proxy Tunnel
          command: |
            : ${SAUCELABS_USER:?"Required Env Variable not found!"}
            : ${SAUCELABS_KEY:?"Required Env Variable not found!"}
            # startup saucelabs tunnel as background task (its a blocking command)
            sc -u ${SAUCELABS_USER} -k ${SAUCELABS_KEY} <<# parameters.tunnel_identifier >> -i <<parameters.tunnel_identifier>> <</ parameters.tunnel_identifier>> &
            #wait for sauce tunnel up to 1 minute
            wget --retry-connrefused --no-check-certificate -T 60 localhost:4445

  close_tunnel:
    steps:
      - run:
          name: Close Sauce Connect Tunnels
          command: killall sc 

jobs:
  with_proxy:
    description: Use Sauce Connect with a Proxy
    parameters:
      docker:
        type: string
        default: "circleci/openjdk:8"
      tunnel_identifier:
        description: Name your Sauce Connect tunnel make sure to use the tunnelIdentifier desired capability in your test script
        type: string
        default: ""
      version:
        type: string
        default: "4.5.1"
      steps:
        type: steps
        description: Steps to execute once the Sauce Connect Tunnel is available
    docker: 
      - image: <<parameters.docker>>
    steps:
      - checkout
      - install:
          version: <<parameters.version>>
      - open_tunnel:
          tunnel_identifier: <<parameters.tunnel_identifier>>
      - steps: << parameters.steps >>
      - close_tunnel

examples:
  simple_test:
    description: Open a named saucelabs tunnel before running mvn verify
    usage:
      version: 2.1
      orbs:
        saucelabs: saucelabs/connect@volatile
      workflows:
        basic_workflow:
          jobs:
            - saucelabs/with_proxy:
                steps:
                  - run: mvn verify -B
  
  parallel_tunnels:
    description: Open a named saucelabs tunnel before running mvn verify
    usage:
      version: 2.1
      orbs:
        saucelabs: saucelabs/connect@volatile
      workflows:
        browser_tests:
          jobs:
            - saucelabs/with_proxy:
                name: "Chrome Tests"
                steps:
                  - run: mvn verify -B -Dsauce.browser=chrome  -Dsauce.tunnel="chrome"
                tunnel_identifier: "chrome"
            - saucelabs/with_proxy:
                name: "Safari Tests"
                steps:
                  - run: mvn verify -B -Dsauce.browser=safari  -Dsauce.tunnel="safari"
                tunnel_identifier: "safari"
